services:
  geopulse-keygen-dev:
    image: alpine:latest
    container_name: geopulse-keygen-dev
    restart: "no"
    volumes:
      - ./keys:/keys
      - ./generate-keys.sh:/generate-keys.sh
    command: sh /generate-keys.sh

  geopulse-backend-dev:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: geopulse-backend-dev
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - GEOPULSE_POSTGRES_URL=jdbc:postgresql://${GEOPULSE_POSTGRES_HOST}:${GEOPULSE_POSTGRES_PORT}/${GEOPULSE_POSTGRES_DB}
    ports:
      - 8080:8080  # Change left port to customize external access
    volumes:
      - ./keys:/app/keys
    depends_on:
      geopulse-keygen-dev:
        condition: service_completed_successfully
      geopulse-postgres-dev:
        condition: service_healthy

  geopulse-ui-dev:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: geopulse-ui-dev
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - 5555:80  # Change left port to customize external access
    depends_on:
      - geopulse-backend-dev

  geopulse-postgres-dev:
    image: postgis/postgis:17-3.5
    container_name: geopulse-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${GEOPULSE_POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${GEOPULSE_POSTGRES_PASSWORD}
      POSTGRES_DB: ${GEOPULSE_POSTGRES_DB}
    volumes:
      - postgres-data-dev:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${GEOPULSE_POSTGRES_USERNAME} -d ${GEOPULSE_POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data-dev: